<?php
namespace Rascal;

interface IPrinter
{
	public function pprint(\PhpParser\Node $node);
	public function pprintEnumCaseStmt(\PhpParser\Node\Stmt\EnumCase $node);
	public function pprintExpressionStmt(\PhpParser\Node\Stmt\Expression $node);
	public function pprintUseUseStmt(\PhpParser\Node\Stmt\UseUse $node);
	public function pprintGlobalStmt(\PhpParser\Node\Stmt\Global_ $node);
	public function pprintNamespaceStmt(\PhpParser\Node\Stmt\Namespace_ $node);
	public function pprintTraitUseStmt(\PhpParser\Node\Stmt\TraitUse $node);
	public function pprintPrecedenceTraitUseAdaptationStmt(\PhpParser\Node\Stmt\TraitUseAdaptation\Precedence $node);
	public function pprintAliasTraitUseAdaptationStmt(\PhpParser\Node\Stmt\TraitUseAdaptation\Alias $node);
	public function pprintCatchStmt(\PhpParser\Node\Stmt\Catch_ $node);
	public function pprintClassStmt(\PhpParser\Node\Stmt\Class_ $node);
	public function pprintPropertyPropertyStmt(\PhpParser\Node\Stmt\PropertyProperty $node);
	public function pprintLabelStmt(\PhpParser\Node\Stmt\Label $node);
	public function pprintStaticVarStmt(\PhpParser\Node\Stmt\StaticVar $node);
	public function pprintCaseStmt(\PhpParser\Node\Stmt\Case_ $node);
	public function pprintContinueStmt(\PhpParser\Node\Stmt\Continue_ $node);
	public function pprintClassMethodStmt(\PhpParser\Node\Stmt\ClassMethod $node);
	public function pprintUnsetStmt(\PhpParser\Node\Stmt\Unset_ $node);
	public function pprintFinallyStmt(\PhpParser\Node\Stmt\Finally_ $node);
	public function pprintInterfaceStmt(\PhpParser\Node\Stmt\Interface_ $node);
	public function pprintElseStmt(\PhpParser\Node\Stmt\Else_ $node);
	public function pprintWhileStmt(\PhpParser\Node\Stmt\While_ $node);
	public function pprintHaltCompilerStmt(\PhpParser\Node\Stmt\HaltCompiler $node);
	public function pprintDeclareDeclareStmt(\PhpParser\Node\Stmt\DeclareDeclare $node);
	public function pprintGotoStmt(\PhpParser\Node\Stmt\Goto_ $node);
	public function pprintStaticStmt(\PhpParser\Node\Stmt\Static_ $node);
	public function pprintExprStmt(\PhpParser\Node\Stmt\Expr $node);
	public function pprintBlockStmt(\PhpParser\Node\Stmt\Block $node);
	public function pprintReturnStmt(\PhpParser\Node\Stmt\Return_ $node);
	public function pprintTryCatchStmt(\PhpParser\Node\Stmt\TryCatch $node);
	public function pprintEchoStmt(\PhpParser\Node\Stmt\Echo_ $node);
	public function pprintDeclareStmt(\PhpParser\Node\Stmt\Declare_ $node);
	public function pprintPropertyStmt(\PhpParser\Node\Stmt\Property $node);
	public function pprintBreakStmt(\PhpParser\Node\Stmt\Break_ $node);
	public function pprintIfStmt(\PhpParser\Node\Stmt\If_ $node);
	public function pprintConstStmt(\PhpParser\Node\Stmt\Const_ $node);
	public function pprintFunctionStmt(\PhpParser\Node\Stmt\Function_ $node);
	public function pprintSwitchStmt(\PhpParser\Node\Stmt\Switch_ $node);
	public function pprintForeachStmt(\PhpParser\Node\Stmt\Foreach_ $node);
	public function pprintForStmt(\PhpParser\Node\Stmt\For_ $node);
	public function pprintDoStmt(\PhpParser\Node\Stmt\Do_ $node);
	public function pprintGroupUseStmt(\PhpParser\Node\Stmt\GroupUse $node);
	public function pprintUseStmt(\PhpParser\Node\Stmt\Use_ $node);
	public function pprintInlineHTMLStmt(\PhpParser\Node\Stmt\InlineHTML $node);
	public function pprintClassConstStmt(\PhpParser\Node\Stmt\ClassConst $node);
	public function pprintElseIfStmt(\PhpParser\Node\Stmt\ElseIf_ $node);
	public function pprintNopStmt(\PhpParser\Node\Stmt\Nop $node);
	public function pprintTraitStmt(\PhpParser\Node\Stmt\Trait_ $node);
	public function pprintEnumStmt(\PhpParser\Node\Stmt\Enum_ $node);
	public function pprintMatchArm(\PhpParser\Node\MatchArm $node);
	public function pprintNullableType(\PhpParser\Node\NullableType $node);
	public function pprintIdentifier(\PhpParser\Node\Identifier $node);
	public function pprintPropertyHook(\PhpParser\Node\PropertyHook $node);
	public function pprintParam(\PhpParser\Node\Param $node);
	public function pprintStaticVar(\PhpParser\Node\StaticVar $node);
	public function pprintInterpolatedStringPart(\PhpParser\Node\InterpolatedStringPart $node);
	public function pprintAttribute(\PhpParser\Node\Attribute $node);
	public function pprintListExpr(\PhpParser\Node\Expr\List_ $node);
	public function pprintShellExecExpr(\PhpParser\Node\Expr\ShellExec $node);
	public function pprintConstFetchExpr(\PhpParser\Node\Expr\ConstFetch $node);
	public function pprintIncludeExpr(\PhpParser\Node\Expr\Include_ $node);
	public function pprintStaticPropertyFetchExpr(\PhpParser\Node\Expr\StaticPropertyFetch $node);
	public function pprintVariableExpr(\PhpParser\Node\Expr\Variable $node);
	public function pprintPrintExpr(\PhpParser\Node\Expr\Print_ $node);
	public function pprintPreIncExpr(\PhpParser\Node\Expr\PreInc $node);
	public function pprintStaticCallExpr(\PhpParser\Node\Expr\StaticCall $node);
	public function pprintYieldFromExpr(\PhpParser\Node\Expr\YieldFrom $node);
	public function pprintClosureExpr(\PhpParser\Node\Expr\Closure $node);
	public function pprintIntCastExpr(\PhpParser\Node\Expr\Cast\Int_ $node);
	public function pprintObjectCastExpr(\PhpParser\Node\Expr\Cast\Object_ $node);
	public function pprintDoubleCastExpr(\PhpParser\Node\Expr\Cast\Double $node);
	public function pprintStringCastExpr(\PhpParser\Node\Expr\Cast\String_ $node);
	public function pprintUnsetCastExpr(\PhpParser\Node\Expr\Cast\Unset_ $node);
	public function pprintBoolCastExpr(\PhpParser\Node\Expr\Cast\Bool_ $node);
	public function pprintArrayCastExpr(\PhpParser\Node\Expr\Cast\Array_ $node);
	public function pprintThrowExpr(\PhpParser\Node\Expr\Throw_ $node);
	public function pprintPostDecExpr(\PhpParser\Node\Expr\PostDec $node);
	public function pprintUnaryMinusExpr(\PhpParser\Node\Expr\UnaryMinus $node);
	public function pprintClassConstFetchExpr(\PhpParser\Node\Expr\ClassConstFetch $node);
	public function pprintBitwiseNotExpr(\PhpParser\Node\Expr\BitwiseNot $node);
	public function pprintErrorSuppressExpr(\PhpParser\Node\Expr\ErrorSuppress $node);
	public function pprintArrowFunctionExpr(\PhpParser\Node\Expr\ArrowFunction $node);
	public function pprintEvalExpr(\PhpParser\Node\Expr\Eval_ $node);
	public function pprintNullsafePropertyFetchExpr(\PhpParser\Node\Expr\NullsafePropertyFetch $node);
	public function pprintArrayDimFetchExpr(\PhpParser\Node\Expr\ArrayDimFetch $node);
	public function pprintMethodCallExpr(\PhpParser\Node\Expr\MethodCall $node);
	public function pprintPropertyFetchExpr(\PhpParser\Node\Expr\PropertyFetch $node);
	public function pprintPlusAssignOpExpr(\PhpParser\Node\Expr\AssignOp\Plus $node);
	public function pprintShiftRightAssignOpExpr(\PhpParser\Node\Expr\AssignOp\ShiftRight $node);
	public function pprintDivAssignOpExpr(\PhpParser\Node\Expr\AssignOp\Div $node);
	public function pprintModAssignOpExpr(\PhpParser\Node\Expr\AssignOp\Mod $node);
	public function pprintBitwiseOrAssignOpExpr(\PhpParser\Node\Expr\AssignOp\BitwiseOr $node);
	public function pprintMinusAssignOpExpr(\PhpParser\Node\Expr\AssignOp\Minus $node);
	public function pprintPowAssignOpExpr(\PhpParser\Node\Expr\AssignOp\Pow $node);
	public function pprintMulAssignOpExpr(\PhpParser\Node\Expr\AssignOp\Mul $node);
	public function pprintConcatAssignOpExpr(\PhpParser\Node\Expr\AssignOp\Concat $node);
	public function pprintShiftLeftAssignOpExpr(\PhpParser\Node\Expr\AssignOp\ShiftLeft $node);
	public function pprintBitwiseXorAssignOpExpr(\PhpParser\Node\Expr\AssignOp\BitwiseXor $node);
	public function pprintCoalesceAssignOpExpr(\PhpParser\Node\Expr\AssignOp\Coalesce $node);
	public function pprintBitwiseAndAssignOpExpr(\PhpParser\Node\Expr\AssignOp\BitwiseAnd $node);
	public function pprintPlusBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\Plus $node);
	public function pprintGreaterBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\Greater $node);
	public function pprintLogicalOrBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\LogicalOr $node);
	public function pprintSpaceshipBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\Spaceship $node);
	public function pprintSmallerBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\Smaller $node);
	public function pprintShiftRightBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\ShiftRight $node);
	public function pprintBooleanOrBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\BooleanOr $node);
	public function pprintLogicalAndBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\LogicalAnd $node);
	public function pprintEqualBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\Equal $node);
	public function pprintNotIdenticalBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\NotIdentical $node);
	public function pprintSmallerOrEqualBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\SmallerOrEqual $node);
	public function pprintBooleanAndBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\BooleanAnd $node);
	public function pprintDivBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\Div $node);
	public function pprintLogicalXorBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\LogicalXor $node);
	public function pprintModBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\Mod $node);
	public function pprintBitwiseOrBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\BitwiseOr $node);
	public function pprintMinusBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\Minus $node);
	public function pprintIdenticalBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\Identical $node);
	public function pprintGreaterOrEqualBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\GreaterOrEqual $node);
	public function pprintPowBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\Pow $node);
	public function pprintMulBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\Mul $node);
	public function pprintConcatBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\Concat $node);
	public function pprintShiftLeftBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\ShiftLeft $node);
	public function pprintBitwiseXorBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\BitwiseXor $node);
	public function pprintCoalesceBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\Coalesce $node);
	public function pprintNotEqualBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\NotEqual $node);
	public function pprintBitwiseAndBinaryOpExpr(\PhpParser\Node\Expr\BinaryOp\BitwiseAnd $node);
	public function pprintAssignExpr(\PhpParser\Node\Expr\Assign $node);
	public function pprintPostIncExpr(\PhpParser\Node\Expr\PostInc $node);
	public function pprintErrorExpr(\PhpParser\Node\Expr\Error $node);
	public function pprintUnaryPlusExpr(\PhpParser\Node\Expr\UnaryPlus $node);
	public function pprintTernaryExpr(\PhpParser\Node\Expr\Ternary $node);
	public function pprintEmptyExpr(\PhpParser\Node\Expr\Empty_ $node);
	public function pprintNewExpr(\PhpParser\Node\Expr\New_ $node);
	public function pprintYieldExpr(\PhpParser\Node\Expr\Yield_ $node);
	public function pprintExitExpr(\PhpParser\Node\Expr\Exit_ $node);
	public function pprintNullsafeMethodCallExpr(\PhpParser\Node\Expr\NullsafeMethodCall $node);
	public function pprintInstanceofExpr(\PhpParser\Node\Expr\Instanceof_ $node);
	public function pprintFuncCallExpr(\PhpParser\Node\Expr\FuncCall $node);
	public function pprintBooleanNotExpr(\PhpParser\Node\Expr\BooleanNot $node);
	public function pprintCloneExpr(\PhpParser\Node\Expr\Clone_ $node);
	public function pprintPreDecExpr(\PhpParser\Node\Expr\PreDec $node);
	public function pprintMatchExpr(\PhpParser\Node\Expr\Match_ $node);
	public function pprintArrayItemExpr(\PhpParser\Node\Expr\ArrayItem $node);
	public function pprintArrayExpr(\PhpParser\Node\Expr\Array_ $node);
	public function pprintAssignRefExpr(\PhpParser\Node\Expr\AssignRef $node);
	public function pprintIssetExpr(\PhpParser\Node\Expr\Isset_ $node);
	public function pprintClosureUseExpr(\PhpParser\Node\Expr\ClosureUse $node);
	public function pprintAttributeGroup(\PhpParser\Node\AttributeGroup $node);
	public function pprintUnionType(\PhpParser\Node\UnionType $node);
	public function pprintConst(\PhpParser\Node\Const_ $node);
	public function pprintPropertyItem(\PhpParser\Node\PropertyItem $node);
	public function pprintVariadicPlaceholder(\PhpParser\Node\VariadicPlaceholder $node);
	public function pprintRelativeName(\PhpParser\Node\Name\Relative $node);
	public function pprintFullyQualifiedName(\PhpParser\Node\Name\FullyQualified $node);
	public function pprintVarLikeIdentifier(\PhpParser\Node\VarLikeIdentifier $node);
	public function pprintIntersectionType(\PhpParser\Node\IntersectionType $node);
	public function pprintName(\PhpParser\Node\Name $node);
	public function pprintIntScalar(\PhpParser\Node\Scalar\Int_ $node);
	public function pprintFloatScalar(\PhpParser\Node\Scalar\Float_ $node);
	public function pprintDNumberScalar(\PhpParser\Node\Scalar\DNumber $node);
	public function pprintStringScalar(\PhpParser\Node\Scalar\String_ $node);
	public function pprintInterpolatedStringScalar(\PhpParser\Node\Scalar\InterpolatedString $node);
	public function pprintNamespaceMagicConstScalar(\PhpParser\Node\Scalar\MagicConst\Namespace_ $node);
	public function pprintClassMagicConstScalar(\PhpParser\Node\Scalar\MagicConst\Class_ $node);
	public function pprintDirMagicConstScalar(\PhpParser\Node\Scalar\MagicConst\Dir $node);
	public function pprintFileMagicConstScalar(\PhpParser\Node\Scalar\MagicConst\File $node);
	public function pprintMethodMagicConstScalar(\PhpParser\Node\Scalar\MagicConst\Method $node);
	public function pprintPropertyMagicConstScalar(\PhpParser\Node\Scalar\MagicConst\Property $node);
	public function pprintFunctionMagicConstScalar(\PhpParser\Node\Scalar\MagicConst\Function_ $node);
	public function pprintLineMagicConstScalar(\PhpParser\Node\Scalar\MagicConst\Line $node);
	public function pprintTraitMagicConstScalar(\PhpParser\Node\Scalar\MagicConst\Trait_ $node);
	public function pprintLNumberScalar(\PhpParser\Node\Scalar\LNumber $node);
	public function pprintEncapsedStringPartScalar(\PhpParser\Node\Scalar\EncapsedStringPart $node);
	public function pprintEncapsedScalar(\PhpParser\Node\Scalar\Encapsed $node);
	public function pprintDeclareItem(\PhpParser\Node\DeclareItem $node);
	public function pprintUseItem(\PhpParser\Node\UseItem $node);
	public function pprintArrayItem(\PhpParser\Node\ArrayItem $node);
	public function pprintArg(\PhpParser\Node\Arg $node);
	public function pprintClosureUse(\PhpParser\Node\ClosureUse $node);

}
?>